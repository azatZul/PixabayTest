//// PBTPhotoListViewController// PixabayTest////  Created by azat on 27/05/16.//  Copyright (c) 2016. All rights reserved.//#import <SDWebImage/SDWebImageManager.h>#import "PBTPhotoListViewController.h"#import "PBTPhotoListViewOutput.h"#import "PBTPhotoTableViewCell.h"#import "PBTPhoto.h"@interface PBTPhotoListViewController ()@property (nonatomic, strong) NSArray *photos;@property (nonatomic, strong) UIView *loadingView;@end@implementation PBTPhotoListViewController#pragma mark - View Lifecycle- (void)viewDidLoad{    [super viewDidLoad];    NSString *identifier = [PBTPhotoTableViewCell cellIdentifier];    [self.tableView registerClass:[PBTPhotoTableViewCell class] forCellReuseIdentifier:identifier];    self.tableView.rowHeight = 60.0f;    [self.output viewDidFinishLoading];}#pragma mark - View Input Methods- (void)showPhotos:(NSArray *)photos{    self.photos = photos;    [self.tableView reloadData];}- (void)showLoader{    self.tableView.tableFooterView = self.loadingView;}- (void)hideLoader{    self.tableView.tableFooterView = nil;}- (void)showErrorWithMessage:(NSString *)message{    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"Error"                                                                   message:message                                                            preferredStyle:UIAlertControllerStyleAlert];    UIAlertAction *closeAction = [UIAlertAction actionWithTitle:@"Close"                                                          style:UIAlertActionStyleDefault                                                        handler:nil];    [alert addAction:closeAction];    [self presentViewController:alert                       animated:YES                     completion:nil];}#pragma mark - Table View Delegate & Data Source Methods- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{    return 1;}- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{    return self.photos.count;}- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{    NSString *identifier = [PBTPhotoTableViewCell cellIdentifier];    PBTPhotoTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];    if (!cell)    {        cell = [[PBTPhotoTableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle                                            reuseIdentifier:identifier];    }    NSUInteger photoIndex = (NSUInteger)indexPath.row;    PBTPhoto *photo = self.photos[photoIndex];    cell.imageView.image = nil;    [cell configureWithPhoto:photo];    return cell;}- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{    PBTPhoto *photo = self.photos[indexPath.row];    [self.output didSelectPhoto:photo];}- (void)scrollViewDidScroll:(UIScrollView *)scrollView{    if (scrollView.contentOffset.y + self.tableView.bounds.size.height > scrollView.contentSize.height)    {        [self.output didScrollToBottom];    }}#pragma mark - Setters & Getters- (UIView *)loadingView{    if (!_loadingView)    {        _loadingView = [[UIView alloc] initWithFrame:CGRectMake(0.0f, 0.0f, [UIScreen mainScreen].bounds.size.width, 70.0f)];        UIActivityIndicatorView *spinner = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];        [_loadingView addSubview:spinner];        spinner.center = _loadingView.center;        [spinner startAnimating];    }    return _loadingView;}@end