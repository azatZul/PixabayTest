//// PBTPhotoTableViewCell// PixabayTest////  Created by azat on 27/05/16.//  Copyright (c) 2016. All rights reserved.//#import "PBTPhotoTableViewCell.h"#import "PBTPhoto.h"#import "SDWebImageManager.h"#import <FrameAccessor.h>@interface PBTPhotoTableViewCell ()@property (nonatomic, weak) id <SDWebImageOperation> imageOperation;@end@implementation PBTPhotoTableViewCell+ (NSString *)cellIdentifier{    return @"PBTPhotoCell";}- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier{    self = [super initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:reuseIdentifier];    self.imageView.contentMode = UIViewContentModeScaleAspectFit;    self.imageView.clipsToBounds = YES;    self.accessoryType = UITableViewCellAccessoryDisclosureIndicator;    self.imageView.backgroundColor = [UIColor blackColor];    self.detailTextLabel.textColor = [UIColor lightGrayColor];    return self;}- (void)prepareForReuse{    [super prepareForReuse];    if (self.imageOperation)    {        [self.imageOperation cancel];    }    self.imageOperation = nil;}- (void)configureWithPhoto:(PBTPhoto *)photo{    if (photo.previewURL)    {        /* TODO: подумать как нормально реализовать         * по хорошему надо это делать в интеракторе, через сервис         * но возникает проблема прокидывания зависимостей между V-P-I и обратно, что накладно по объему связей и кода         * в принципе, данные фотографий получены в слое бизнес-логики, а отображение картинки по URL - это дело слоя view         * хотя конечно работать с сетью и кешем тут - не лучшее решение         * пока ничего лучшего не придумал         */        SDWebImageManager *manager = [SDWebImageManager sharedManager];        void (^completionBlock)(UIImage *, NSError *, SDImageCacheType, BOOL, NSURL *) =                ^(UIImage *image, NSError *error, SDImageCacheType cacheType, BOOL finished, NSURL *imageURL)                {                    self.imageView.image = image;                    [self setNeedsLayout];                };        self.imageOperation = [manager downloadImageWithURL:[NSURL URLWithString:photo.previewURL]                                                    options:SDWebImageRetryFailed                                                   progress:nil                                                  completed:completionBlock];    }    NSString *title = [NSString stringWithFormat:@"Posted by %@", photo.ownerName];    self.textLabel.text = title;    self.detailTextLabel.text = [photo.tags componentsJoinedByString:@", "];}- (void)setSelected:(BOOL)selected animated:(BOOL)animated{    UIColor *color = self.imageView.backgroundColor;    [super setSelected:selected animated:animated];    self.imageView.backgroundColor = color;}- (void)setHighlighted:(BOOL)highlighted animated:(BOOL)animated{    UIColor *color = self.imageView.backgroundColor;    [super setHighlighted:highlighted animated:animated];    self.imageView.backgroundColor = color;}- (void)layoutSubviews{    [super layoutSubviews];    self.imageView.x = self.layoutMargins.left;    self.imageView.y = 5.0f;    self.imageView.height = self.height - 10.0f;    self.imageView.width = self.imageView.height * 1.2f;    self.textLabel.x = self.imageView.right + 10.0f;    self.textLabel.y = 10.0f;    self.textLabel.height = 20.0f;    self.detailTextLabel.x = self.textLabel.x;    self.detailTextLabel.y = self.textLabel.bottom + 5.0f;    self.detailTextLabel.height = 20.0f;    self.separatorInset = UIEdgeInsetsMake(0.0f, self.imageView.right, 0.0f, 0.0f);}@end